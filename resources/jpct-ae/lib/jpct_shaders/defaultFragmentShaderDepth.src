#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D textureUnit0;

uniform float shadowNearPlane;
uniform float shadowFarPlane;
uniform float shadowBias;
uniform float shadowAlphaClip;

varying vec4 vPosition;
varying vec2 texCoord;

vec4 packFloat(float value){
	#ifdef GL_FRAGMENT_PRECISION_HIGH
	const vec4 PACK_FACTORS = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);
	const vec4 BIT_MASK = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);
	vec4 packetValue = fract(PACK_FACTORS * value);
	return packetValue - packetValue * BIT_MASK;
	#else
	const vec3 PACK_FACTORS = vec3(128.0, 128.0 * 256.0, 128.0 * 256.0 * 256.0);
	vec3 packetValue = floor(PACK_FACTORS * value);
	packetValue -= vec3(0.0, packetValue.r * 256.0, packetValue.g * 256.0);
	return vec4(packetValue / 255.0, 1.0);
	#endif
}

void main() {
	gl_FragColor = packFloat((vPosition.z - shadowNearPlane) / (shadowFarPlane - shadowNearPlane) + shadowBias);
	if (shadowAlphaClip>=0.0) {
		vec4 col=texture2D(textureUnit0, texCoord);
		if (col.a<shadowAlphaClip) {
			discard;
		}
	}
}